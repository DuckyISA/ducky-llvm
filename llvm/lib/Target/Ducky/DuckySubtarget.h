//===-- DuckySubtarget.h - Define Subtarget for the Ducky -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Ducky specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef DuckySUBTARGET_H
#define DuckySUBTARGET_H

#include "Ducky.h"
#include "DuckyFrameLowering.h"
#include "DuckyISelLowering.h"
#include "DuckyInstrInfo.h"
#include "DuckySelectionDAGInfo.h"
#include "DuckySubtarget.h"
#include "llvm/Target/TargetMachine.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "DuckyGenSubtargetInfo.inc"


#define DUCKY_STACK_ALIGNMENT             4  // Every entry on stack should be aligned to 4-byte boundary
#define DUCKY_FRAME_HEADER_SIZE           8  // IP + FP located just above FP


namespace llvm {
class StringRef;

class DuckySubtarget : public DuckyGenSubtargetInfo {
  virtual void anchor();

private:
  const DataLayout DL;       // Calculates type size & alignment.
  DuckyInstrInfo InstrInfo;
  DuckyTargetLowering TLInfo;
  DuckySelectionDAGInfo TSInfo;
  DuckyFrameLowering FrameLowering;
  InstrItineraryData InstrItins;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  DuckySubtarget(const Triple &TT, StringRef CPU,
               StringRef FS, DuckyTargetMachine &TM);

  /// getInstrItins - Return the instruction itineraries based on subtarget
  /// selection.
  const InstrItineraryData *getInstrItineraryData() const override {
    return &InstrItins;
  }
  const DuckyInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const DuckyRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const DuckyTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const DuckyFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const DuckySelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);
};
} // End llvm namespace

#endif

